a. ArrayList и LinkedList
Поскольку ArrayList реализует массив, доступ по индексу, в нем быстрее, чем доступ к элементу в LinkedList
LinkedList реализует связный список, и для доступа к определенному элементу, необходимо пройти через все элементы от начала.

Время удаления и добавления в конец у обоих структур примерно одинаковое.

Но, вставка в середину быстрее в LinkedList, чем в ArrayList, так как для это требуется всего лишь изменить указатели на соседние узлы


Если планируется хранить данные и часто добавлять или удалять их в середине списка - то следует использовать LinkedList
Если же планируется работа со списком и обработка данных - то ArrayList


b. HashSet, LinkedHashSet и TreeSet
HashSet хранит элементы в хэш-таблице и использует функцию hashCode() хранящихся объектов(ключем является сам объект).
LinkedHashSet - хранит элементы в виде связного списка, элементы хранятся в порядке добавления.
TreeSet - реализация красно-черного дерева.

Добавление элемента проходит быстрее в HashSet и LinkedHashSet, поскольку в TreeSet используется сортировка, требующая дополнительного времени
Доступ к элементу в TreeSet быстрее, чем в HashSet, так как структура уже отсортирована.

LinkedHashSet быстрее удаляет элемент, если он был добавлен в числе последних (из за упорядоченности по времени добавления)



Если требуется хранить элементы упорядоченно - TreeSet.
Если требуется хранить элементы в порядке добавления - LinkedHashSet.
В остальных случаях - HashSet


c. HashMap, LinkedHashMap и TreeMap
HashMap хранит элементы в хэш-таблице и использует функцию hashCode() хранящихся объектов.
LinkedHashMap реализует связный список и хранит ключи в порядке добавления.
TreeMap - реализация красно-черного дерева, по умолчанию хранит ключи в порядке возрастания.

Добавление элемента проходит быстрее в HashMap и LinkedHashMap, поскольку в TreeMap используется сортировка, требующая дополнительного времени
Доступ к элементу в TreeMap быстрее, так как структура уже отсортирована.

Если нужно добавлять, вставлять или удалять элементы, то нужно использовать HashMap
Если нужно соблюсти порядок добавления - LinkedHashMap
Если необходим быстрый доступ по ключу - TreeMap